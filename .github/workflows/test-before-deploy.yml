name: Test Before Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install Dependencies
      run: |
        cd SubwayRunner
        npm install
        
    - name: Run Static Tests
      run: |
        cd SubwayRunner
        npm run test
        
    - name: Install Playwright
      run: |
        cd SubwayRunner
        npx playwright install
        
    - name: Run Playwright Tests
      run: |
        cd SubwayRunner
        npx playwright test
        
    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: SubwayRunner/test-results/
        
    - name: Upload Screenshots
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: screenshots
        path: SubwayRunner/test-results/screenshots/

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: success()
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Prepare Production Files
      run: |
        echo "üöÄ Preparing SubwayRunner for production..."
        echo "‚úÖ Tests passed - deploying tested version"
        
        # Copy production HTML as main index
        cp SubwayRunner/index.html index.html
        
        # Create deployment directory
        mkdir -p deploy
        cp index.html deploy/
        
        # Create .htaccess with enhanced security
        cat > deploy/.htaccess << 'EOF'
        # Force HTTPS for secure gaming
        RewriteEngine On
        RewriteCond %{HTTPS} !=on
        RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
        
        # Enable compression for faster loading
        <ifModule mod_deflate.c>
            AddOutputFilterByType DEFLATE text/plain
            AddOutputFilterByType DEFLATE text/html
            AddOutputFilterByType DEFLATE text/css
            AddOutputFilterByType DEFLATE application/javascript
            AddOutputFilterByType DEFLATE image/svg+xml
        </ifModule>
        
        # Cache static assets for better performance
        <ifModule mod_expires.c>
            ExpiresActive On
            ExpiresByType text/css "access plus 1 month"
            ExpiresByType application/javascript "access plus 1 month"
            ExpiresByType image/png "access plus 1 month"
            ExpiresByType image/jpg "access plus 1 month"
        </ifModule>
        
        # Security headers for gaming
        Header always set X-Content-Type-Options nosniff
        Header always set X-Frame-Options DENY
        Header always set X-XSS-Protection "1; mode=block"
        Header always set Referrer-Policy "strict-origin-when-cross-origin"
        
        # Content Security Policy for Three.js and external resources
        Header always set Content-Security-Policy "default-src 'self' https:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://unpkg.com; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self' https:; font-src 'self' https:;"
        EOF
        
        echo "‚úÖ Production files prepared and tested"
        
    - name: Deploy to Hostinger via FTP
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./deploy/
        server-dir: /
        dry-run: false
        log-level: verbose
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          **/.DS_Store
          **/Thumbs.db
          
    - name: Verify Deployment
      run: |
        echo "üéØ SubwayRunner Deployment completed successfully!"
        echo ""
        echo "üåê Game is now live at:"
        echo "https://ki-revolution.at/"
        echo ""
        echo "‚úÖ All tests passed before deployment:"
        echo "‚Ä¢ Static code analysis"
        echo "‚Ä¢ Browser compatibility tests"
        echo "‚Ä¢ Performance validation"
        echo "‚Ä¢ Level progression tests"
        echo "‚Ä¢ Mobile responsiveness"
        echo ""
        echo "üéÆ Ready to play!"