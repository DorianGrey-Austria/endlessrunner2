name: Deploy EndlessRunner MVP with Head Tracking

on:
  push:
    branches: [ main ]
    paths:
      - '**.js'
      - '**.html'
      - '**.css'
      - '**.md'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Prepare Production Files
      run: |
        echo "üöÄ Preparing EndlessRunner MVP with Head Tracking for production..."
        
        # Create deployment directory
        mkdir -p deploy
        
        # Find and copy the EndlessRunner MVP files
        # Check if files are in root or subdirectory
        if [ -f "index.html" ]; then
          echo "Files found in root directory"
          cp index.html deploy/
          cp style.css deploy/
          cp script.js deploy/
          cp game-loader.js deploy/ || true
          cp compatibility.js deploy/ || true
          cp sw.js deploy/ || true
          cp headTrackingController.js deploy/ || true
          cp head-tracking-demo.html deploy/ || true
          cp HEAD_TRACKING_README.md deploy/ || true
        elif [ -f "EndlessRunner-MVP/index.html" ]; then
          echo "Files found in EndlessRunner-MVP directory"
          cp EndlessRunner-MVP/index.html deploy/
          cp EndlessRunner-MVP/style.css deploy/
          cp EndlessRunner-MVP/script.js deploy/
          cp EndlessRunner-MVP/game-loader.js deploy/ || true
          cp EndlessRunner-MVP/compatibility.js deploy/ || true
          cp EndlessRunner-MVP/sw.js deploy/ || true
          cp EndlessRunner-MVP/headTrackingController.js deploy/ || true
          cp EndlessRunner-MVP/head-tracking-demo.html deploy/ || true
          cp EndlessRunner-MVP/HEAD_TRACKING_README.md deploy/ || true
        else
          echo "Error: Could not find index.html"
          exit 1
        fi
        
        # Copy assets if they exist
        if [ -d "assets" ]; then
          cp -r assets deploy/
        elif [ -d "EndlessRunner-MVP/assets" ]; then
          cp -r EndlessRunner-MVP/assets deploy/
        fi
        
        # Copy sounds if they exist
        if [ -d "sounds" ]; then
          cp -r sounds deploy/
        elif [ -d "EndlessRunner-MVP/sounds" ]; then
          cp -r EndlessRunner-MVP/sounds deploy/
        fi
        
        # Create .htaccess for production with HTTPS enforcement
        cat > deploy/.htaccess << 'EOF'
        # Force HTTPS for webcam/head tracking functionality
        RewriteEngine On
        RewriteCond %{HTTPS} !=on
        RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
        
        # Enable compression
        <ifModule mod_deflate.c>
            AddOutputFilterByType DEFLATE text/plain
            AddOutputFilterByType DEFLATE text/html
            AddOutputFilterByType DEFLATE text/css
            AddOutputFilterByType DEFLATE application/javascript
            AddOutputFilterByType DEFLATE application/json
            AddOutputFilterByType DEFLATE image/svg+xml
        </ifModule>
        
        # Cache static assets
        <ifModule mod_expires.c>
            ExpiresActive On
            ExpiresByType text/css "access plus 1 month"
            ExpiresByType application/javascript "access plus 1 month"
            ExpiresByType image/png "access plus 1 month"
            ExpiresByType image/jpg "access plus 1 month"
            ExpiresByType audio/wav "access plus 1 month"
            ExpiresByType audio/mp3 "access plus 1 month"
        </ifModule>
        
        # Security headers
        Header always set X-Content-Type-Options nosniff
        Header always set X-Frame-Options SAMEORIGIN
        Header always set X-XSS-Protection "1; mode=block"
        Header always set Referrer-Policy "strict-origin-when-cross-origin"
        
        # Permissions Policy for camera access
        Header always set Permissions-Policy "camera=(self), microphone=()"
        
        # CORS headers for MediaPipe CDN
        Header set Access-Control-Allow-Origin "*"
        Header set Access-Control-Allow-Methods "GET, POST, OPTIONS"
        Header set Access-Control-Allow-Headers "Content-Type"
        EOF
        
        echo "‚úÖ Production files prepared with head tracking support"
        echo "üìÅ Files to deploy:"
        ls -la deploy/
        
    - name: Deploy to Hostinger via FTP
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./deploy/
        server-dir: /public_html/endless-runner-mobile/
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          **/.DS_Store
          **/Thumbs.db
          
    - name: Verify Deployment
      run: |
        echo "üéØ Deployment completed successfully!"
        echo ""
        echo "üåê Game is now live at:"
        echo "https://ki-revolution.at/endless-runner-mobile/"
        echo ""
        echo "üéÆ Features deployed:"
        echo "‚Ä¢ ‚úÖ Mobile-optimized Endless Runner"
        echo "‚Ä¢ ‚úÖ Head Tracking with MediaPipe Face Mesh (Beta)"
        echo "‚Ä¢ ‚úÖ Kalman filtering for smooth gesture detection"
        echo "‚Ä¢ ‚úÖ Touch controls with automatic fallback"
        echo "‚Ä¢ ‚úÖ Progressive difficulty system"
        echo "‚Ä¢ ‚úÖ Achievements and daily challenges"
        echo "‚Ä¢ ‚úÖ Service Worker for offline play"
        echo "‚Ä¢ ‚úÖ HTTPS security headers for camera access"
        echo ""
        echo "üì± Head Tracking Demo:"
        echo "https://ki-revolution.at/endless-runner-mobile/head-tracking-demo.html"
        echo ""
        echo "üî• Ready to play with your head movements!"